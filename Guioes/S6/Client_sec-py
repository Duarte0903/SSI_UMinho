import socket
import sys
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes

class Client:
    def __init__(self, server_host, server_port):
        self.server_host = server_host
        self.server_port = server_port

    def run(self):
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.connect((self.server_host, self.server_port))

            # Chave de criptografia
            key = b'minha_chave_secreta'  # Chave fixa para simplificação

            # Inicialização do cipher
            cipher = AES.new(key, AES.MODE_GCM)

            # Envio da chave ao servidor
            s.sendall(key)

            while True:
                message = input("Digite uma mensagem: ")
                if message.lower() == 'exit':
                    break

                # Cifrar a mensagem
                ciphertext, tag = cipher.encrypt_and_digest(message.encode())

                # Enviar mensagem cifrada e tag para o servidor
                s.sendall(ciphertext)
                s.sendall(tag)

                # Receber resposta do servidor
                data = s.recv(1024)
                print("Resposta do servidor:", data.decode())

if __name__ == "__main__":
    client = Client("localhost", 12345)
    client.run()